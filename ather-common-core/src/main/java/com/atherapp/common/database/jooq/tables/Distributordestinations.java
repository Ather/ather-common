/*
 * This file is generated by jOOQ.
 */
package com.atherapp.common.database.jooq.tables;


import com.atherapp.common.database.jooq.Indexes;
import com.atherapp.common.database.jooq.Keys;
import com.atherapp.common.database.jooq.Thehoard;
import com.atherapp.common.database.jooq.tables.records.DistributordestinationsRecord;
import com.atherapp.common.database.jooq.tables.records.DistributordestinationsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {"http://www.jooq.org", "jOOQ version:3.10.1"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Distributordestinations extends TableImpl<DistributordestinationsRecord> {

	/**
	 * The reference instance of <code>thehoard.distributorDestinations</code>
	 */
	public static final Distributordestinations DISTRIBUTORDESTINATIONS = new Distributordestinations();
	private static final long serialVersionUID = 13243701;
	/**
	 * The column <code>thehoard.distributorDestinations.id</code>.
	 */
	public final TableField<DistributordestinationsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER
			.nullable(false).identity(true), this, "");
	/**
	 * The column <code>thehoard.distributorDestinations.provider</code>.
	 */
	public final TableField<DistributordestinationsRecord, Integer> PROVIDER = createField("provider", org.jooq.impl.SQLDataType.INTEGER
			.nullable(false), this, "");
	/**
	 * The column <code>thehoard.distributorDestinations.status</code>.
	 */
	public final TableField<DistributordestinationsRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT
			.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");
	/**
	 * The column <code>thehoard.distributorDestinations.rootFile</code>.
	 */
	public final TableField<DistributordestinationsRecord, String> ROOTFILE = createField("rootFile", org.jooq.impl.SQLDataType
			.VARCHAR(50).nullable(false), this, "");

	/**
	 * Create a <code>thehoard.distributorDestinations</code> table reference
	 */
	public Distributordestinations() {
		this(DSL.name("distributorDestinations"), null);
	}

	/**
	 * Create an aliased <code>thehoard.distributorDestinations</code> table reference
	 */
	public Distributordestinations(String alias) {
		this(DSL.name(alias), DISTRIBUTORDESTINATIONS);
	}

	/**
	 * Create an aliased <code>thehoard.distributorDestinations</code> table reference
	 */
	public Distributordestinations(Name alias) {
		this(alias, DISTRIBUTORDESTINATIONS);
	}

	private Distributordestinations(Name alias, Table<DistributordestinationsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Distributordestinations(Name alias, Table<DistributordestinationsRecord> aliased, Field<?>[] parameters) {
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DistributordestinationsRecord> getRecordType() {
		return DistributordestinationsRecord.class;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Schema getSchema() {
		return Thehoard.THEHOARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Index> getIndexes() {
		return Arrays.<Index>asList(Indexes.DISTRIBUTORDESTINATIONS_ID_UNIQUE, Indexes.DISTRIBUTORDESTINATIONS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DistributordestinationsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DISTRIBUTORDESTINATIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DistributordestinationsRecord> getPrimaryKey() {
		return Keys.KEY_DISTRIBUTORDESTINATIONS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DistributordestinationsRecord>> getKeys() {
		return Arrays.<UniqueKey<DistributordestinationsRecord>>asList(Keys.KEY_DISTRIBUTORDESTINATIONS_PRIMARY, Keys.KEY_DISTRIBUTORDESTINATIONS_ID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Distributordestinations as(String alias) {
		return new Distributordestinations(DSL.name(alias), this);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Distributordestinations as(Name alias) {
		return new Distributordestinations(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Distributordestinations rename(String name) {
		return new Distributordestinations(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Distributordestinations rename(Name name) {
		return new Distributordestinations(name, null);
	}
}
