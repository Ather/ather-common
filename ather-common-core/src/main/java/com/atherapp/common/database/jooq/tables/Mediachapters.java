/*
 * This file is generated by jOOQ.
 */
package com.atherapp.common.database.jooq.tables;


import com.atherapp.common.database.jooq.Indexes;
import com.atherapp.common.database.jooq.Keys;
import com.atherapp.common.database.jooq.Thehoard;
import com.atherapp.common.database.jooq.tables.records.MediachaptersRecord;
import com.atherapp.common.database.jooq.tables.records.MediachaptersRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = {"http://www.jooq.org", "jOOQ version:3.10.1"}, comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Mediachapters extends TableImpl<MediachaptersRecord> {

	/**
	 * The reference instance of <code>thehoard.MediaChapters</code>
	 */
	public static final Mediachapters MEDIACHAPTERS = new Mediachapters();
	private static final long serialVersionUID = -48060572;
	/**
	 * The column <code>thehoard.MediaChapters.Id</code>.
	 */
	public final TableField<MediachaptersRecord, Integer> ID = createField("Id", org.jooq.impl.SQLDataType.INTEGER
			.nullable(false).identity(true), this, "");
	/**
	 * The column <code>thehoard.MediaChapters.Uuid</code>.
	 */
	public final TableField<MediachaptersRecord, String> UUID = createField("Uuid", org.jooq.impl.SQLDataType
			.VARCHAR(36).nullable(false), this, "");
	/**
	 * The column <code>thehoard.MediaChapters.MediaFileUuid</code>.
	 */
	public final TableField<MediachaptersRecord, String> MEDIAFILEUUID = createField("MediaFileUuid", org.jooq.impl.SQLDataType
			.VARCHAR(36).nullable(false), this, "");
	/**
	 * The column <code>thehoard.MediaChapters.ChapterId</code>.
	 */
	public final TableField<MediachaptersRecord, Long> CHAPTERID = createField("ChapterId", org.jooq.impl.SQLDataType.BIGINT, this, "");
	/**
	 * The column <code>thehoard.MediaChapters.TimeBase</code>.
	 */
	public final TableField<MediachaptersRecord, Double> TIMEBASE = createField("TimeBase", org.jooq.impl.SQLDataType.DOUBLE, this, "");
	/**
	 * The column <code>thehoard.MediaChapters.Start</code>.
	 */
	public final TableField<MediachaptersRecord, Double> START = createField("Start", org.jooq.impl.SQLDataType.DOUBLE
			.nullable(false), this, "");
	/**
	 * The column <code>thehoard.MediaChapters.End</code>.
	 */
	public final TableField<MediachaptersRecord, Double> END = createField("End", org.jooq.impl.SQLDataType.DOUBLE
			.nullable(false), this, "");
	/**
	 * The column <code>thehoard.MediaChapters.Title</code>.
	 */
	public final TableField<MediachaptersRecord, String> TITLE = createField("Title", org.jooq.impl.SQLDataType
			.VARCHAR(255), this, "");

	/**
	 * Create a <code>thehoard.MediaChapters</code> table reference
	 */
	public Mediachapters() {
		this(DSL.name("MediaChapters"), null);
	}

	/**
	 * Create an aliased <code>thehoard.MediaChapters</code> table reference
	 */
	public Mediachapters(String alias) {
		this(DSL.name(alias), MEDIACHAPTERS);
	}

	/**
	 * Create an aliased <code>thehoard.MediaChapters</code> table reference
	 */
	public Mediachapters(Name alias) {
		this(alias, MEDIACHAPTERS);
	}

	private Mediachapters(Name alias, Table<MediachaptersRecord> aliased) {
		this(alias, aliased, null);
	}

	private Mediachapters(Name alias, Table<MediachaptersRecord> aliased, Field<?>[] parameters) {
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MediachaptersRecord> getRecordType() {
		return MediachaptersRecord.class;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Schema getSchema() {
		return Thehoard.THEHOARD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Index> getIndexes() {
		return Arrays.<Index>asList(Indexes.MEDIACHAPTERS_ID_UNIQUE, Indexes.MEDIACHAPTERS_PRIMARY, Indexes.MEDIACHAPTERS_UUID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MediachaptersRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MEDIACHAPTERS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MediachaptersRecord> getPrimaryKey() {
		return Keys.KEY_MEDIACHAPTERS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MediachaptersRecord>> getKeys() {
		return Arrays.<UniqueKey<MediachaptersRecord>>asList(Keys.KEY_MEDIACHAPTERS_PRIMARY, Keys.KEY_MEDIACHAPTERS_ID_UNIQUE, Keys.KEY_MEDIACHAPTERS_UUID_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Mediachapters as(String alias) {
		return new Mediachapters(DSL.name(alias), this);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Mediachapters as(Name alias) {
		return new Mediachapters(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Mediachapters rename(String name) {
		return new Mediachapters(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public Mediachapters rename(Name name) {
		return new Mediachapters(name, null);
	}
}
