/*
 * This file is generated by jOOQ.
*/
package media.thehoard.common.database.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProvidersoldRecord extends UpdatableRecordImpl<ProvidersoldRecord> implements Record13<Integer, String, Byte, String, String, String, Timestamp, Timestamp, Timestamp, Integer, Byte, byte[], Integer> {

    private static final long serialVersionUID = 1191958105;

    /**
     * Setter for <code>thehoard.providersold.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>thehoard.providersold.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>thehoard.providersold.uuid</code>.
     */
    public void setUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>thehoard.providersold.uuid</code>.
     */
    public String getUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>thehoard.providersold.providerType</code>.
     */
    public void setProvidertype(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>thehoard.providersold.providerType</code>.
     */
    public Byte getProvidertype() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>thehoard.providersold.providerName</code>.
     */
    public void setProvidername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>thehoard.providersold.providerName</code>.
     */
    public String getProvidername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>thehoard.providersold.userEmail</code>.
     */
    public void setUseremail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>thehoard.providersold.userEmail</code>.
     */
    public String getUseremail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>thehoard.providersold.userId</code>.
     */
    public void setUserid(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>thehoard.providersold.userId</code>.
     */
    public String getUserid() {
        return (String) get(5);
    }

    /**
     * Setter for <code>thehoard.providersold.dateCreated</code>.
     */
    public void setDatecreated(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>thehoard.providersold.dateCreated</code>.
     */
    public Timestamp getDatecreated() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>thehoard.providersold.dateUpdated</code>.
     */
    public void setDateupdated(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>thehoard.providersold.dateUpdated</code>.
     */
    public Timestamp getDateupdated() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>thehoard.providersold.lastAttempt</code>.
     */
    public void setLastattempt(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>thehoard.providersold.lastAttempt</code>.
     */
    public Timestamp getLastattempt() {
        return (Timestamp) get(8);
    }

    /**
     * Setter for <code>thehoard.providersold.currentBackoff</code>.
     */
    public void setCurrentbackoff(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>thehoard.providersold.currentBackoff</code>.
     */
    public Integer getCurrentbackoff() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>thehoard.providersold.status</code>.
     */
    public void setStatus(Byte value) {
        set(10, value);
    }

    /**
     * Getter for <code>thehoard.providersold.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(10);
    }

    /**
     * Setter for <code>thehoard.providersold.credential</code>.
     */
    public void setCredential(byte... value) {
        set(11, value);
    }

    /**
     * Getter for <code>thehoard.providersold.credential</code>.
     */
    public byte[] getCredential() {
        return (byte[]) get(11);
    }

    /**
     * Setter for <code>thehoard.providersold.changeToken</code>.
     */
    public void setChangetoken(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>thehoard.providersold.changeToken</code>.
     */
    public Integer getChangetoken() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Byte, String, String, String, Timestamp, Timestamp, Timestamp, Integer, Byte, byte[], Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, Byte, String, String, String, Timestamp, Timestamp, Timestamp, Integer, Byte, byte[], Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Providersold.PROVIDERSOLD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Providersold.PROVIDERSOLD.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return Providersold.PROVIDERSOLD.PROVIDERTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Providersold.PROVIDERSOLD.PROVIDERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Providersold.PROVIDERSOLD.USEREMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Providersold.PROVIDERSOLD.USERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Providersold.PROVIDERSOLD.DATECREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Providersold.PROVIDERSOLD.DATEUPDATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Providersold.PROVIDERSOLD.LASTATTEMPT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return Providersold.PROVIDERSOLD.CURRENTBACKOFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field11() {
        return Providersold.PROVIDERSOLD.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field12() {
        return Providersold.PROVIDERSOLD.CREDENTIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Providersold.PROVIDERSOLD.CHANGETOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getProvidertype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getProvidername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getUseremail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getDatecreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getDateupdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getLastattempt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getCurrentbackoff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component11() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component12() {
        return getCredential();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getChangetoken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getProvidertype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getProvidername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getUseremail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getDatecreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getDateupdated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getLastattempt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getCurrentbackoff();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value11() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value12() {
        return getCredential();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getChangetoken();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value2(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value3(Byte value) {
        setProvidertype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value4(String value) {
        setProvidername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value5(String value) {
        setUseremail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value6(String value) {
        setUserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value7(Timestamp value) {
        setDatecreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value8(Timestamp value) {
        setDateupdated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value9(Timestamp value) {
        setLastattempt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value10(Integer value) {
        setCurrentbackoff(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value11(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value12(byte... value) {
        setCredential(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord value13(Integer value) {
        setChangetoken(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProvidersoldRecord values(Integer value1, String value2, Byte value3, String value4, String value5, String value6, Timestamp value7, Timestamp value8, Timestamp value9, Integer value10, Byte value11, byte[] value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProvidersoldRecord
     */
    public ProvidersoldRecord() {
        super(Providersold.PROVIDERSOLD);
    }

    /**
     * Create a detached, initialised ProvidersoldRecord
     */
    public ProvidersoldRecord(Integer id, String uuid, Byte providertype, String providername, String useremail, String userid, Timestamp datecreated, Timestamp dateupdated, Timestamp lastattempt, Integer currentbackoff, Byte status, byte[] credential, Integer changetoken) {
        super(Providersold.PROVIDERSOLD);

        set(0, id);
        set(1, uuid);
        set(2, providertype);
        set(3, providername);
        set(4, useremail);
        set(5, userid);
        set(6, datecreated);
        set(7, dateupdated);
        set(8, lastattempt);
        set(9, currentbackoff);
        set(10, status);
        set(11, credential);
        set(12, changetoken);
    }
}
