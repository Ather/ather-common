/*
 * This file is generated by jOOQ.
*/
package media.thehoard.common.database.jooq;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import media.thehoard.common.database.jooq.tables.Authentication;
import media.thehoard.common.database.jooq.tables.Devices;
import media.thehoard.common.database.jooq.tables.Distributordestinations;
import media.thehoard.common.database.jooq.tables.Distributordirectories;
import media.thehoard.common.database.jooq.tables.Distributorqueue;
import media.thehoard.common.database.jooq.tables.Homeaccounts;
import media.thehoard.common.database.jooq.tables.Homes;
import media.thehoard.common.database.jooq.tables.Mediachapters;
import media.thehoard.common.database.jooq.tables.Mediafiles;
import media.thehoard.common.database.jooq.tables.Mediastreams;
import media.thehoard.common.database.jooq.tables.Parties;
import media.thehoard.common.database.jooq.tables.Partyaccounts;
import media.thehoard.common.database.jooq.tables.Providerfilerelationships;
import media.thehoard.common.database.jooq.tables.Providerfiles;
import media.thehoard.common.database.jooq.tables.Providers;
import media.thehoard.common.database.jooq.tables.Providersold;
import media.thehoard.common.database.jooq.tables.Servers;
import media.thehoard.common.database.jooq.tables.Users;
import media.thehoard.common.database.jooq.tables.Virtualproviderproviders;
import media.thehoard.common.database.jooq.tables.Virtualproviders;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Thehoard extends SchemaImpl {

    private static final long serialVersionUID = -1648835039;

    /**
     * The reference instance of <code>thehoard</code>
     */
    public static final Thehoard THEHOARD = new Thehoard();

    /**
     * The table <code>thehoard.Authentication</code>.
     */
    public final Authentication AUTHENTICATION = media.thehoard.common.database.jooq.tables.Authentication.AUTHENTICATION;

    /**
     * The table <code>thehoard.devices</code>.
     */
    public final Devices DEVICES = media.thehoard.common.database.jooq.tables.Devices.DEVICES;

    /**
     * The table <code>thehoard.distributorDestinations</code>.
     */
    public final Distributordestinations DISTRIBUTORDESTINATIONS = media.thehoard.common.database.jooq.tables.Distributordestinations.DISTRIBUTORDESTINATIONS;

    /**
     * This table stores all the directories for each destination, to prevent constant API hits to parse destinations.
This is structured differently than the regular files/directories tables because it doesn't use foreign keys.
     */
    public final Distributordirectories DISTRIBUTORDIRECTORIES = media.thehoard.common.database.jooq.tables.Distributordirectories.DISTRIBUTORDIRECTORIES;

    /**
     * The table <code>thehoard.distributorQueue</code>.
     */
    public final Distributorqueue DISTRIBUTORQUEUE = media.thehoard.common.database.jooq.tables.Distributorqueue.DISTRIBUTORQUEUE;

    /**
     * The table <code>thehoard.HomeAccounts</code>.
     */
    public final Homeaccounts HOMEACCOUNTS = media.thehoard.common.database.jooq.tables.Homeaccounts.HOMEACCOUNTS;

    /**
     * The table <code>thehoard.Homes</code>.
     */
    public final Homes HOMES = media.thehoard.common.database.jooq.tables.Homes.HOMES;

    /**
     * The table <code>thehoard.MediaChapters</code>.
     */
    public final Mediachapters MEDIACHAPTERS = media.thehoard.common.database.jooq.tables.Mediachapters.MEDIACHAPTERS;

    /**
     * The table <code>thehoard.MediaFiles</code>.
     */
    public final Mediafiles MEDIAFILES = media.thehoard.common.database.jooq.tables.Mediafiles.MEDIAFILES;

    /**
     * The table <code>thehoard.MediaStreams</code>.
     */
    public final Mediastreams MEDIASTREAMS = media.thehoard.common.database.jooq.tables.Mediastreams.MEDIASTREAMS;

    /**
     * The table <code>thehoard.Parties</code>.
     */
    public final Parties PARTIES = media.thehoard.common.database.jooq.tables.Parties.PARTIES;

    /**
     * The table <code>thehoard.PartyAccounts</code>.
     */
    public final Partyaccounts PARTYACCOUNTS = media.thehoard.common.database.jooq.tables.Partyaccounts.PARTYACCOUNTS;

    /**
     * The table <code>thehoard.ProviderFileRelationships</code>.
     */
    public final Providerfilerelationships PROVIDERFILERELATIONSHIPS = media.thehoard.common.database.jooq.tables.Providerfilerelationships.PROVIDERFILERELATIONSHIPS;

    /**
     * The table <code>thehoard.ProviderFiles</code>.
     */
    public final Providerfiles PROVIDERFILES = media.thehoard.common.database.jooq.tables.Providerfiles.PROVIDERFILES;

    /**
     * The table <code>thehoard.Providers</code>.
     */
    public final Providers PROVIDERS = media.thehoard.common.database.jooq.tables.Providers.PROVIDERS;

    /**
     * The table <code>thehoard.providersold</code>.
     */
    public final Providersold PROVIDERSOLD = media.thehoard.common.database.jooq.tables.Providersold.PROVIDERSOLD;

    /**
     * The table <code>thehoard.servers</code>.
     */
    public final Servers SERVERS = media.thehoard.common.database.jooq.tables.Servers.SERVERS;

    /**
     * The table <code>thehoard.Users</code>.
     */
    public final Users USERS = media.thehoard.common.database.jooq.tables.Users.USERS;

    /**
     * Provider references for virtual providers
     */
    public final Virtualproviderproviders VIRTUALPROVIDERPROVIDERS = media.thehoard.common.database.jooq.tables.Virtualproviderproviders.VIRTUALPROVIDERPROVIDERS;

    /**
     * Virtual provider structures used for spanning across multiple providers
     */
    public final Virtualproviders VIRTUALPROVIDERS = media.thehoard.common.database.jooq.tables.Virtualproviders.VIRTUALPROVIDERS;

    /**
     * No further instances allowed
     */
    private Thehoard() {
        super("thehoard", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Authentication.AUTHENTICATION,
            Devices.DEVICES,
            Distributordestinations.DISTRIBUTORDESTINATIONS,
            Distributordirectories.DISTRIBUTORDIRECTORIES,
            Distributorqueue.DISTRIBUTORQUEUE,
            Homeaccounts.HOMEACCOUNTS,
            Homes.HOMES,
            Mediachapters.MEDIACHAPTERS,
            Mediafiles.MEDIAFILES,
            Mediastreams.MEDIASTREAMS,
            Parties.PARTIES,
            Partyaccounts.PARTYACCOUNTS,
            Providerfilerelationships.PROVIDERFILERELATIONSHIPS,
            Providerfiles.PROVIDERFILES,
            Providers.PROVIDERS,
            Providersold.PROVIDERSOLD,
            Servers.SERVERS,
            Users.USERS,
            Virtualproviderproviders.VIRTUALPROVIDERPROVIDERS,
            Virtualproviders.VIRTUALPROVIDERS);
    }
}
