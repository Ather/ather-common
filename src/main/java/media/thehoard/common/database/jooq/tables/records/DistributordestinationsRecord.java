/*
 * This file is generated by jOOQ.
*/
package media.thehoard.common.database.jooq.tables.records;


import javax.annotation.Generated;

import media.thehoard.common.database.jooq.tables.Distributordestinations;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistributordestinationsRecord extends UpdatableRecordImpl<DistributordestinationsRecord> implements Record4<Integer, Integer, Byte, String> {

    private static final long serialVersionUID = 1560621286;

    /**
     * Setter for <code>thehoard.distributorDestinations.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>thehoard.distributorDestinations.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>thehoard.distributorDestinations.provider</code>.
     */
    public void setProvider(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>thehoard.distributorDestinations.provider</code>.
     */
    public Integer getProvider() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>thehoard.distributorDestinations.status</code>.
     */
    public void setStatus(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>thehoard.distributorDestinations.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>thehoard.distributorDestinations.rootFile</code>.
     */
    public void setRootfile(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>thehoard.distributorDestinations.rootFile</code>.
     */
    public String getRootfile() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Byte, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Byte, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Distributordestinations.DISTRIBUTORDESTINATIONS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Distributordestinations.DISTRIBUTORDESTINATIONS.PROVIDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return Distributordestinations.DISTRIBUTORDESTINATIONS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Distributordestinations.DISTRIBUTORDESTINATIONS.ROOTFILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getProvider();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getRootfile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProvider();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRootfile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributordestinationsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributordestinationsRecord value2(Integer value) {
        setProvider(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributordestinationsRecord value3(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributordestinationsRecord value4(String value) {
        setRootfile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DistributordestinationsRecord values(Integer value1, Integer value2, Byte value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DistributordestinationsRecord
     */
    public DistributordestinationsRecord() {
        super(Distributordestinations.DISTRIBUTORDESTINATIONS);
    }

    /**
     * Create a detached, initialised DistributordestinationsRecord
     */
    public DistributordestinationsRecord(Integer id, Integer provider, Byte status, String rootfile) {
        super(Distributordestinations.DISTRIBUTORDESTINATIONS);

        set(0, id);
        set(1, provider);
        set(2, status);
        set(3, rootfile);
    }
}
